// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210801174849_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Domain.Property", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("About")
                        .HasColumnType("TEXT");

                    b.Property<int>("Bathrooms")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Bedrooms")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("IDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("IType")
                        .HasColumnType("TEXT");

                    b.Property<float>("Iincome")
                        .HasColumnType("REAL");

                    b.Property<float>("Iminamount")
                        .HasColumnType("REAL");

                    b.Property<int>("Iperiod")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Iyield")
                        .HasColumnType("REAL");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PType")
                        .HasColumnType("TEXT");

                    b.Property<float>("PricePersqm")
                        .HasColumnType("REAL");

                    b.Property<float>("Size")
                        .HasColumnType("REAL");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<string>("WhytoInvest")
                        .HasColumnType("TEXT");

                    b.Property<float>("appreciation")
                        .HasColumnType("REAL");

                    b.Property<float>("capitalgains")
                        .HasColumnType("REAL");

                    b.Property<float>("capitalgainyield")
                        .HasColumnType("REAL");

                    b.Property<float>("expectedreturn")
                        .HasColumnType("REAL");

                    b.Property<float>("investnow")
                        .HasColumnType("REAL");

                    b.Property<float>("maintenance")
                        .HasColumnType("REAL");

                    b.Property<string>("payoutfrequency")
                        .HasColumnType("TEXT");

                    b.Property<float>("price")
                        .HasColumnType("REAL");

                    b.Property<float>("registrationfees")
                        .HasColumnType("REAL");

                    b.Property<string>("servicecharge")
                        .HasColumnType("TEXT");

                    b.Property<float>("spvfees")
                        .HasColumnType("REAL");

                    b.Property<string>("taxes")
                        .HasColumnType("TEXT");

                    b.Property<float>("totalIamount")
                        .HasColumnType("REAL");

                    b.Property<float>("totalyieled")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Properties");
                });
#pragma warning restore 612, 618
        }
    }
}
